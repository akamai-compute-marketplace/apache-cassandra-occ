---
- name: configuring environment
  hosts: localhost
  connection: local
  vars_files:
      - group_vars/apache-cassandra/vars
      - group_vars/apache-cassandra/secret_vars
  
  vars:
    count: '{{ cluster_size - 1 }}' # UDF
       
  tasks:
  # generate playbook secrets
# encrypted in vault. Redux is going to be here
#  - name: generating playbook secrets
#    lineinfile:
#      insertafter: EOF
#      path: group_vars/apache-cassandra/vars
#      line: |
#        truststore_password: {{ lookup('password', '/dev/null length=25 chars=ascii_letters,digits') }}
#        keystore_password: {{ lookup('password', '/dev/null length=25 chars=ascii_letters,digits') }}
#        ca_password: {{ lookup('password', '/dev/null length=25 chars=ascii_letters,digits') }}
#        sudo_password: {{ lookup('password', '/dev/null length=25 chars=ascii_letters,digits') }}
#        db_password: {{ lookup('password', '/dev/null length=25 chars=ascii_letters,digits') }}
#    no_log: true

  - name: creating apache-cassandra cluster
    linode.cloud.instance:
      label: '{{ instance_prefix }}{{ item | int + 1 }}-{{ uuid }}'
      api_token: '{{ api_token }}'
      type: '{{ type }}'
      region: '{{ region }}'
      image: '{{ image }}'
      root_pass: '{{ root_pass }}'
      authorized_keys: '{{ ssh_keys }}'
      private_ip: true
      #stackscript_id: 0
      ua_prefix: 'marketplace-apache-cassandra-occ'      
      tags: '{{ linode_tags }}'
      state: present
    with_sequence: count='{{ count }}'

  - name: get info about the instances
    linode.cloud.instance_info:
      api_token: '{{ api_token }}'
      label: '{{ instance_prefix }}{{ item | int }}-{{ uuid }}'
    register: info
    with_sequence: count='{{ cluster_size }}'

  - name: update group_vars
    blockinfile:
      path: ./group_vars/apache-cassandra/vars
      marker: "# {mark} INSTANCE VARS"
      block: |
        #jinja2: trim_blocks:False
        cassandra_data:
          server:
            {%- for count in range(cluster_size) %}
            - cassandra{{ count + 1 }}:
              instance:
                #hostname: {{ info.results[count].instance.label | replace('_', '-') }}
                hostname: cassandra{{ count + 1 }}
                ip_pub1: {{ info.results[count].instance.ipv4[0] }}
                ip_priv1: {{ info.results[count].instance.ipv4[1] }}
            {%- endfor %}
    loop: "{{ info.results }}"

  - name: update inventory
    blockinfile:
      path: ./hosts
      marker: "# {mark} CASSANDRA LINODES"
      block: |
        #jinja2: trim_blocks:False
        [cassandra_servers]
        localhost ansible_connection=local user=root
        {%- for count in range(cluster_size - 1) %}
        {{ info.results[count + 1].instance.ipv4[0] }}
        {%- endfor %}        

  - name: wait for port 22 to become open
    wait_for:
      port: 22
      host: '{{ item.instance.ipv4[0] }}'
      search_regex: OpenSSH
      delay: 10
    connection: local
    with_items: "{{ info.results }}"